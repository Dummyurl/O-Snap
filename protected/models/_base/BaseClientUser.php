<?php

/**
 * This is the model base class for the table "user".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ClientUser".
 *
 * Columns in table "user" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $osnap_id
 * @property string $business_osnap_id
 * @property string $username
 * @property string $password
 * @property string $email
 * @property string $first_name
 * @property string $last_name
 * @property string $birth_date
 * @property string $country_code
 * @property string $phone
 * @property string $city
 * @property string $state
 * @property string $country
 * @property string $post_code
 * @property string $address
 * @property double $latitude
 * @property double $longtitude
 * @property string $image
 * @property integer $user_type
 * @property integer $parent_user
 * @property string $business_name
 * @property integer $business_type
 * @property integer $business_category
 * @property string $business_owner
 * @property string $business_image
 * @property integer $status
 * @property string $auth_id
 * @property string $auth_provider
 * @property string $token
 * @property string $created_at
 * @property integer $device_type
 * @property string $device_token
 * @property string $activation_code
 * @property string $forget_pass_code
 * @property integer $base
 * @property integer $is_active
 * @property integer $is_agree
 *
 */
abstract class BaseClientUser extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ClientUser|ClientUsers', $n);
	}

	public static function representingColumn() {
		return 'osnap_id';
	}

	public function rules() {
		return array(
			array('osnap_id, business_osnap_id, username, password, email, first_name, last_name, birth_date, country_code, phone, city, state, country, post_code, address, latitude, longtitude, image, user_type, parent_user, business_name, business_type, business_category, business_owner, business_image, status, auth_id, auth_provider, token, created_at, device_type, device_token, activation_code, forget_pass_code, base', 'required'),
			array('user_type, parent_user, business_type, business_category, status, device_type, base, is_active, is_agree', 'numerical', 'integerOnly'=>true),
			array('latitude, longtitude', 'numerical'),
			array('osnap_id, business_osnap_id, username, email, business_name', 'length', 'max'=>30),
			array('password, city, state, country, business_owner, business_image, activation_code, forget_pass_code', 'length', 'max'=>100),
			array('first_name, last_name', 'length', 'max'=>20),
			array('country_code, post_code', 'length', 'max'=>10),
			array('phone', 'length', 'max'=>13),
			array('image, auth_id, token, device_token', 'length', 'max'=>200),
			array('auth_provider', 'length', 'max'=>50),
			array('is_active, is_agree', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, osnap_id, business_osnap_id, username, password, email, first_name, last_name, birth_date, country_code, phone, city, state, country, post_code, address, latitude, longtitude, image, user_type, parent_user, business_name, business_type, business_category, business_owner, business_image, status, auth_id, auth_provider, token, created_at, device_type, device_token, activation_code, forget_pass_code, base, is_active, is_agree', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'osnap_id' => Yii::t('app', 'Osnap'),
			'business_osnap_id' => Yii::t('app', 'Business Osnap'),
			'username' => Yii::t('app', 'Username'),
			'password' => Yii::t('app', 'Password'),
			'email' => Yii::t('app', 'Email'),
			'first_name' => Yii::t('app', 'First Name'),
			'last_name' => Yii::t('app', 'Last Name'),
			'birth_date' => Yii::t('app', 'Birth Date'),
			'country_code' => Yii::t('app', 'Country Code'),
			'phone' => Yii::t('app', 'Phone'),
			'city' => Yii::t('app', 'City'),
			'state' => Yii::t('app', 'State'),
			'country' => Yii::t('app', 'Country'),
			'post_code' => Yii::t('app', 'Post Code'),
			'address' => Yii::t('app', 'Address'),
			'latitude' => Yii::t('app', 'Latitude'),
			'longtitude' => Yii::t('app', 'Longtitude'),
			'image' => Yii::t('app', 'Image'),
			'user_type' => Yii::t('app', 'User Type'),
			'parent_user' => Yii::t('app', 'Parent User'),
			'business_name' => Yii::t('app', 'Business Name'),
			'business_type' => Yii::t('app', 'Business Type'),
			'business_category' => Yii::t('app', 'Business Category'),
			'business_owner' => Yii::t('app', 'Business Owner'),
			'business_image' => Yii::t('app', 'Business Image'),
			'status' => Yii::t('app', 'Status'),
			'auth_id' => Yii::t('app', 'Auth'),
			'auth_provider' => Yii::t('app', 'Auth Provider'),
			'token' => Yii::t('app', 'Token'),
			'created_at' => Yii::t('app', 'Created At'),
			'device_type' => Yii::t('app', 'Device Type'),
			'device_token' => Yii::t('app', 'Device Token'),
			'activation_code' => Yii::t('app', 'Activation Code'),
			'forget_pass_code' => Yii::t('app', 'Forget Pass Code'),
			'base' => Yii::t('app', 'Base'),
			'is_active' => Yii::t('app', 'Is Active'),
			'is_agree' => Yii::t('app', 'Is Agree'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;
		$criteria->condition .= "user_type IN (1)";
		$criteria->compare('id', $this->id);
		$criteria->compare('osnap_id', $this->osnap_id, true);
		$criteria->compare('business_osnap_id', $this->business_osnap_id, true);
		$criteria->compare('username', $this->username, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('first_name', $this->first_name, true);
		$criteria->compare('last_name', $this->last_name, true);
		$criteria->compare('birth_date', $this->birth_date, true);
		$criteria->compare('country_code', $this->country_code, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('city', $this->city, true);
		$criteria->compare('state', $this->state, true);
		$criteria->compare('country', $this->country, true);
		$criteria->compare('post_code', $this->post_code, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('latitude', $this->latitude);
		$criteria->compare('longtitude', $this->longtitude);
		$criteria->compare('image', $this->image, true);
		$criteria->compare('user_type', $this->user_type);
		$criteria->compare('parent_user', $this->parent_user);
		$criteria->compare('business_name', $this->business_name, true);
		$criteria->compare('business_type', $this->business_type);
		$criteria->compare('business_category', $this->business_category);
		$criteria->compare('business_owner', $this->business_owner, true);
		$criteria->compare('business_image', $this->business_image, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('auth_id', $this->auth_id, true);
		$criteria->compare('auth_provider', $this->auth_provider, true);
		$criteria->compare('token', $this->token, true);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('device_type', $this->device_type);
		$criteria->compare('device_token', $this->device_token, true);
		$criteria->compare('activation_code', $this->activation_code, true);
		$criteria->compare('forget_pass_code', $this->forget_pass_code, true);
		$criteria->compare('base', $this->base);
		$criteria->compare('is_active', $this->is_active);
		$criteria->compare('is_agree', $this->is_agree);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}