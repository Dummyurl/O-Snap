<?php

/**
 * This is the model base class for the table "user_experience".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserExperience".
 *
 * Columns in table "user_experience" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $professional_experience
 * @property integer $education_id
 * @property integer $child_id
 * @property string $education
 * @property string $company_name
 * @property integer $from_month
 * @property integer $from_year
 * @property integer $to_month
 * @property integer $to_year
 * @property integer $is_current
 * @property integer $user_id
 * @property integer $is_active
 *
 */
abstract class BaseUserExperience extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_experience';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserExperience|UserExperiences', $n);
	}

	public static function representingColumn() {
		return 'professional_experience';
	}

	public function rules() {
		return array(
			array('professional_experience, education_id, child_id, education, company_name, from_month, from_year, to_month, to_year, is_current, user_id', 'required'),
			array('education_id, child_id, from_month, from_year, to_month, to_year, is_current, user_id, is_active', 'numerical', 'integerOnly'=>true),
			array('professional_experience, education, company_name', 'length', 'max'=>200),
			array('is_active', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, professional_experience, education_id, child_id, education, company_name, from_month, from_year, to_month, to_year, is_current, user_id, is_active', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'professional_experience' => Yii::t('app', 'Professional Experience'),
			'education_id' => Yii::t('app', 'Education'),
			'child_id' => Yii::t('app', 'Child'),
			'education' => Yii::t('app', 'Education'),
			'company_name' => Yii::t('app', 'Company Name'),
			'from_month' => Yii::t('app', 'From Month'),
			'from_year' => Yii::t('app', 'From Year'),
			'to_month' => Yii::t('app', 'To Month'),
			'to_year' => Yii::t('app', 'To Year'),
			'is_current' => Yii::t('app', 'Is Current'),
			'user_id' => Yii::t('app', 'User'),
			'is_active' => Yii::t('app', 'Is Active'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('professional_experience', $this->professional_experience, true);
		$criteria->compare('education_id', $this->education_id);
		$criteria->compare('child_id', $this->child_id);
		$criteria->compare('education', $this->education, true);
		$criteria->compare('company_name', $this->company_name, true);
		$criteria->compare('from_month', $this->from_month);
		$criteria->compare('from_year', $this->from_year);
		$criteria->compare('to_month', $this->to_month);
		$criteria->compare('to_year', $this->to_year);
		$criteria->compare('is_current', $this->is_current);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('is_active', $this->is_active);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}