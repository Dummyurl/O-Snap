<?php

/**
 * This is the model base class for the table "post_job".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PostJob".
 *
 * Columns in table "post_job" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $post_id
 * @property integer $user_id
 * @property string $job_title
 * @property string $job_description
 * @property integer $category_id
 * @property integer $subcategory_id
 * @property integer $work_type
 * @property string $attachments
 * @property integer $pay_by
 * @property double $rate
 * @property integer $exp_level
 * @property integer $how_long
 * @property integer $commitment
 * @property string $post_datetime
 * @property integer $status
 * @property double $latitude
 * @property double $longtitude
 * @property integer $work_by
 *
 */
abstract class BasePostJob extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'post_job';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PostJob|PostJobs', $n);
	}

	public static function representingColumn() {
		return 'job_title';
	}

	public function rules() {
		return array(
			array('user_id, job_title, job_description, category_id, subcategory_id, work_type, attachments, pay_by, rate, exp_level, how_long, commitment, post_datetime, latitude, longtitude, work_by', 'required'),
			array('user_id, category_id, subcategory_id, work_type, pay_by, exp_level, how_long, commitment, status, work_by', 'numerical', 'integerOnly'=>true),
			array('rate, latitude, longtitude', 'numerical'),
			array('status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('post_id, user_id, job_title, job_description, category_id, subcategory_id, work_type, attachments, pay_by, rate, exp_level, how_long, commitment, post_datetime, status, latitude, longtitude, work_by', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'post_id' => Yii::t('app', 'Post'),
			'user_id' => Yii::t('app', 'User'),
			'job_title' => Yii::t('app', 'Job Title'),
			'job_description' => Yii::t('app', 'Job Description'),
			'category_id' => Yii::t('app', 'Category'),
			'subcategory_id' => Yii::t('app', 'Subcategory'),
			'work_type' => Yii::t('app', 'Work Type'),
			'attachments' => Yii::t('app', 'Attachments'),
			'pay_by' => Yii::t('app', 'Pay By'),
			'rate' => Yii::t('app', 'Rate'),
			'exp_level' => Yii::t('app', 'Exp Level'),
			'how_long' => Yii::t('app', 'How Long'),
			'commitment' => Yii::t('app', 'Commitment'),
			'post_datetime' => Yii::t('app', 'Post Datetime'),
			'status' => Yii::t('app', 'Status'),
			'latitude' => Yii::t('app', 'Latitude'),
			'longtitude' => Yii::t('app', 'Longtitude'),
			'work_by' => Yii::t('app', 'Work By'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('post_id', $this->post_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('job_title', $this->job_title, true);
		$criteria->compare('job_description', $this->job_description, true);
		$criteria->compare('category_id', $this->category_id);
		$criteria->compare('subcategory_id', $this->subcategory_id);
		$criteria->compare('work_type', $this->work_type);
		$criteria->compare('attachments', $this->attachments, true);
		$criteria->compare('pay_by', $this->pay_by);
		$criteria->compare('rate', $this->rate);
		$criteria->compare('exp_level', $this->exp_level);
		$criteria->compare('how_long', $this->how_long);
		$criteria->compare('commitment', $this->commitment);
		$criteria->compare('post_datetime', $this->post_datetime, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('latitude', $this->latitude);
		$criteria->compare('longtitude', $this->longtitude);
		$criteria->compare('work_by', $this->work_by);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}